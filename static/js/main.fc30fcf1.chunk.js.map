{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","helpers/filterTodos.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","dispatch","id","title","completed","className","onClick","TodoList","result","toLowerCase","includes","filterTodos","length","map","TodoFilter","onSubmit","event","preventDefault","value","onChange","e","target","slice","toUpperCase","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","useState","isLoading","setIsLoading","user","setUser","loadUser","a","loadedUser","useEffect","href","name","App","loadTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc30fcf1.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetFilterQuery = {\n  type: 'filterQuery/SET';\n  payload: string;\n};\n\ntype SetFilterStatus = {\n  type: 'filterStatus/SET';\n  payload: Status;\n};\n\nconst setQuery = (query: string): SetFilterQuery => ({\n  type: 'filterQuery/SET',\n  payload: query,\n});\n\nconst setStatus = (status: Status): SetFilterStatus => ({\n  type: 'filterStatus/SET',\n  payload: status,\n});\n\nexport const actions = {\n  setQuery,\n  setStatus,\n};\n\ntype Action = SetFilterQuery | SetFilterStatus;\nexport type State = {\n  query: string,\n  status: Status\n};\n\nconst filterReducer = (\n  state: State = {\n    query: '',\n    status: 'all',\n  },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filterStatus/SET':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    case 'filterQuery/SET':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype State = Todo[];\ntype Action = SetTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useAppDispatch } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { actions } from '../../features/currentTodo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoItem = ({ todo }: Props) => {\n  const dispatch = useAppDispatch();\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  const handleEyeClick = () => {\n    dispatch(actions.setTodo(todo));\n  };\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span\n            className=\"icon\"\n            data-cy=\"iconCompleted\"\n          >\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={completed ? 'has-text-success' : 'has-text-danger'}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleEyeClick}\n        >\n          <span className=\"icon\">\n            <i className=\"far fa-eye\" />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { TodoItem } from '../TodoItem';\nimport { filterTodos } from '../../helpers/filterTodos';\n\nexport const TodoList: React.FC = () => {\n  const { todos: todosFromStore, filter } = useAppSelector(state => state);\n  const todos = filterTodos(todosFromStore, filter);\n\n  return (\n    <>\n      {todos.length === 0 ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n          <tbody>\n            {todos.map(todo => {\n              return (\n                <TodoItem todo={todo} />\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { State } from '../features/filter';\n\nexport const filterTodos = (todos: Todo[], filter: State) => {\n  let result = todos;\n\n  result = result.filter(({ title }) => (\n    title.toLowerCase().includes(filter.query.toLowerCase())\n  ));\n\n  switch (filter.status) {\n    case 'active':\n      return result.filter(({ completed }) => !completed);\n    case 'completed':\n      return result.filter(({ completed }) => completed);\n    default:\n      return result;\n  }\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const statuses: Status[] = ['all', 'active', 'completed'];\n  const filter = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(actions.setStatus(e.target.value as Status));\n  };\n\n  const handleQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actions.setQuery(e.target.value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={handleSelect}\n          >\n            {statuses.map(status => (\n              <option value={status}>\n                {status.slice(0, 1).toUpperCase() + status.slice(1)}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const loadUser = async () => {\n    const loadedUser = await getUser(userId);\n\n    setUser(loadedUser);\n    setIsLoading(false);\n  };\n\n  const handleClose = () => {\n    dispatch(actions.removeTodo());\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href=\"mailto:Sincere@april.biz\">{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const loadTodos = async () => {\n    const todos = await getTodos();\n\n    dispatch(actions.setTodos(todos));\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? <Loader /> : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal todo={currentTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}